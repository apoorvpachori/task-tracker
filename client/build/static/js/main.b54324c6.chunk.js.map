{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","_id","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","console","log","fetchTask","id","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b54324c6.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color,text,onClick}) => {\n\n\n    return (\n        <div>\n            <button \n            onClick = {onClick}\n            style = {{backgroundColor: color} }\n            className = 'btn'>\n            {text}\n            </button>\n        </div>\n    )\n}\nButton.defaultProps = {\n    color:'steelblue'\n}\nButton.propTypes = \n{\n    text: PropTypes.string,\n    color: PropTypes.string\n}\nexport default Button\n","import {useLocation} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\nconst Header = ({title, onAdd, showAdd}) => {\n    const location = useLocation()\n\n    \n    return (\n        <div>\n            <header className = 'header'>\n                <h1> {title} </h1>\n                {\n                    location.pathname === '/' && (\n                <Button color={showAdd ? 'red': 'green'}text = {showAdd ? 'Close': 'Add'} onClick= {onAdd} />\n                    )\n                }\n            </header>\n        </div>\n    )\n}\nHeader.defaultProps = \n{\n    title:'Task Tracker',\n}\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n\nexport default Header;\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task , onDelete, onToggle}) => {\n    return (\n        <div className = {`task ${task.reminder ? 'reminder': ''}`} onDoubleClick = {() => onToggle(task._id)}>\n        <h3>{task.text} <FaTimes style = {{color:'red'}} onClick = {() => onDelete(task._id)}/></h3>\n        <p>{task.day}</p>\n        </div>\n    )\n}\nexport default Task\n ","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n\n    return (\n        <>\n            {\n                tasks.map\n                ( \n                    (task,index)=>\n                    (<Task \n                        key = {index} \n                        task = {task} \n                        onDelete = {onDelete} \n                        onToggle = {onToggle}/>) \n                ) \n            }\n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nimport React from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text,setText] = useState('')\n    const [day,setDay] = useState('')\n    const [reminder,setReminder] = useState(true)\n\n\n    const onSubmit = (e) => \n    {\n        e.preventDefault()\n\n        if(!text)\n        {\n            alert('Please add text')\n            return\n        }\n\n        onAdd({text,day,reminder})\n        \n        setText('')\n        setDay('')\n        setReminder(false)\n    \n    }\n    return (\n        <form className = 'add-form' onSubmit = {onSubmit}>\n            <div className = 'form-control'>\n                <label>Task</label>\n                <input type = 'text' placeholder = 'Add Task' value = {text} onChange = {(e) => setText(e.target.value)} />\n            </div>\n            <div className = 'form-control'>\n                <label>Day & Time</label>\n                <input type = 'text' placeholder = 'Add Day and Time' value = {day} onChange = {(e) => setDay(e.target.value)}/>\n            </div>\n            <div className = 'form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input \n                    type = 'checkbox' \n                    checked = {reminder}\n                    value = {reminder} \n                    onChange = {\n                        (e) => setReminder(e.currentTarget.checked)\n                        }\n                        />\n            </div>\n\n            <input className = 'btn btn-block' type = 'submit' value = 'Save Task' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p> Copyright &copy; 2021</p>\n            <Link to = '/about'>About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n            <h4>\n                Version 1.0.0\n            </h4>\n            <Link to = '/'>Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import { useState , useEffect} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n\n    const [showAddTask,setShowAddTask] = useState (false)\n    const [tasks, setTasks] = useState([])\n\n    useEffect(() => {\n \n      const getTasks = async () => {\n        const tasksFromServer = await fetchTasks()\n        setTasks(tasksFromServer)\n      }\n      getTasks()\n    },[])\n\n  const fetchTasks = async () => {\n    const res = await fetch(`/api/tasks`)\n    const data = await res.json()\n    console.log(typeof data);\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`/api/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n//add task\n  const addTask = async (task) => {\n\n    const res = await fetch(`/api/tasks`, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task) // body data type must match \"Content-Type\" header\n    })\n\n    const data = await res.json()\n    setTasks([...tasks, data])\n  }\n  //Delete Task\n\n  const deleteTask = async (id) => {\n    const res = await fetch(`/api/tasks/${id}`,{\n      method: 'DELETE'\n    })\n    console.log(res);\n    setTasks(tasks.filter((task) => task._id !== id))\n\n  }\n\n  //toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n    const res = await fetch(`/api/tasks/${id}`,{\n      method:'PUT',\n      headers: {\n        'Content-type':'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n  \n  const data = await res.json()\n\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder:!data.reminder}: task ))\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd = {()=> (setShowAddTask(!showAddTask))} showAdd = {showAddTask} title = 'Task Tracker'/>\n\n        <Route path = '/' exact render = {(props) => (\n          <>\n            {showAddTask && <AddTask onAdd = {addTask}/>}\n            { \n              tasks.length > 0 ? (<Tasks tasks = {tasks} onDelete = {deleteTask} onToggle = {toggleReminder}/> ) : ('No Tasks to Show')\n            }\n          </>\n        )} />\n        <Route path='/about' component={About}/>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}